---
name: CI
"on":
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: "0 5 * * 4"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    env:
      PIP_BREAK_SYSTEM_PACKAGES: "1"
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4

      - name: Set up Python 3.
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Adding known hosts and ssh key.
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          echo "${{ secrets.SSH_DEPLOY_KEY_ANSIBLE_ROLES }}" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa

      - name: Install test dependencies.
        run: pip3 install yamllint ansible==9.9.0 ansible-lint==24.7.0

      - name: Lint code.
        run: |
          yamllint .
          ansible-lint

  integration:
    name: Integration
    runs-on: ${{ matrix.os.image }}
    env:
      PIP_BREAK_SYSTEM_PACKAGES: "1"
    strategy:
      fail-fast: false
      matrix:
        os:
          - image: ubuntu-22.04
          - image: ubuntu-24.04
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4

      - name: Install test dependencies.
        run: |
          pip3 install ansible

      - name: Adapting known hosts and ssh key.
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          echo "${{ secrets.SSH_DEPLOY_KEY_ANSIBLE_ROLES }}" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa

      - name: Set up the test environment.
        run: |
          cp tests/ansible.cfg ./ansible.cfg
          cp tests/inventory ./inventory
          cp tests/config.yml ./config.yml
          ansible-galaxy install -r requirements.yml

      - name: Test the playbook's syntax.
        run: ansible-playbook main.yml --syntax-check

      - name: Test the playbook.
        run: ansible-playbook main.yml -v
        env:
          ANSIBLE_FORCE_COLOR: "1"

      - name: Idempotence check.
        run: |
          idempotence=$(mktemp)
          ansible-playbook main.yml | tee -a ${idempotence}
          tail ${idempotence} | grep -q 'changed=0.*failed=0' && (echo 'Idempotence test: pass' && exit 0) || (echo 'Idempotence test: fail' && exit 1)
        env:
          ANSIBLE_FORCE_COLOR: "1"
